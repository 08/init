#!/bin/bash

# Copyright (c) 2013 The CoreOS Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

set -e

if [[ ! -b "$1" ]]; then
    echo "$1 is not a block device" >&2
    exit 1
fi

# Query udev to tell us about this block device and provide all
# attributes as shell variables starting with STATE_
eval $(udevadm info --query=property --root \
    --export --export-prefix=STATE_ --name="$1")

if [[ "${STATE_DEVTYPE}" != "partition" || \
      "${STATE_ID_PART_TABLE_TYPE}" != "gpt" ]]
then
    echo "$1 is not a GPT partition" >&2
    exit 1
fi

# Of all that excellent information udev just gave us it didn't provide
# the name of the disk device, but the parent sysfs directory should be it.
DISK_DEVNAME=$(udevadm info --query=name --root --path="${STATE_DEVPATH%/*}")

if sgdisk -v "$DISK_DEVNAME" | grep -q "^Problem: The secondary header"; then
    echo "Extending $STATE_ID_PART_ENTRY_NAME partition..." >&2

    # Quick sanity check on metadata we need to preserve
    if [[ -z "$STATE_ID_PART_ENTRY_NAME" || \
          -z "$STATE_ID_PART_ENTRY_TYPE" || \
          -z "$STATE_ID_PART_ENTRY_UUID" || \
          -z "$STATE_ID_PART_ENTRY_NUMBER" || \
          -z "$STATE_ID_PART_ENTRY_OFFSET" ]]
    then
        echo "Resize failed: Missing metadata from udev!" >&2
        exit 1
    fi

    partno="$STATE_ID_PART_ENTRY_NUMBER"
    if ! sgdisk \
        --move-second-header \
        --delete="$partno" \
        --new="$partno:$STATE_ID_PART_ENTRY_OFFSET:0" \
        --typecode="$partno:$STATE_ID_PART_ENTRY_TYPE" \
        --partition-guid="$partno:$STATE_ID_PART_ENTRY_UUID" \
        --change-name="$partno:$STATE_ID_PART_ENTRY_NAME" \
        "$DISK_DEVNAME"
    then
        echo "Resize failed: error updating GPT" >&2
        exit 1
    fi

    # sgdisk only can trigger a full-disk reload which fails while the
    # root filesystem is mounted. partprobe from parted is fancier.
    partprobe "$DISK_DEVNAME"

    set +e
    e2fsck -p -f "$STATE_DEVNAME"
    if [[ $? -ne 0 && $? -ne 1 ]]; then
        echo "Resize failed: error during fsck" >&2
        exit 1
    fi
    if ! resize2fs "$STATE_DEVNAME"; then
        echo "Resize failed: error during resize2fs" >&2
        exit 1
    fi
fi
